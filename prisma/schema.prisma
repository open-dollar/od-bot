// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model globalStats {
  id                    Int       @id @default(autoincrement())
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt
  network               Network
  blockTimestamp        String
  erc20Supply           String?
  globalDebt            String?
  globalDebtCeiling     String?
  globalDebtUtilization String?
  surplusInTreasury     String?
  marketPrice           String?
  redemptionRate        String?
  redemptionPrice       String?
  annualRate            String?
  eightRate             String?
  pRate                 String?
  iRate                 String?
  lastUpdateTime        DateTime?

  @@unique([network, blockTimestamp])
}

model tokenStats {
  id             Int      @id @default(autoincrement())
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  network        Network
  blockTimestamp String
  symbol         String?
  address        String?
  delayedOracle  String?
  debtAmount     String?
  debtCeiling    String?
  lockedAmount   String?
  currentPrice   String?
  nextPrice      String?
  stabilityFee   String?

  @@unique([network, blockTimestamp, symbol])
}

model tx {
  id              Int      @id @default(autoincrement())
  createdAt       DateTime @default(now())
  network         Network
  data            String
  method          String?
  contract        String?
  contractName    String?
  args            String?
  textTitle       String?
  textDescription String?
  hash            String?
}

enum Network {
  OPTIMISM
  OPTIMISM_GOERLI
  ARBITRUM
  ARBITRUM_GOERLI
  ARBITRUM_SEPOLIA
}

model User {
  id               String            @id // address
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  multiplier       Int               @default(1)
  bolts            Int               @default(0)
  campaigns        UserCampaign[]
  campaignEvents   CampaignEvent[]
  multipliers      UserMultiplier[]
  multiplierEvents MultiplierEvent[]
}

model UserCampaign {
  id           Int          @id @default(autoincrement())
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  user         User         @relation(fields: [userId], references: [id])
  userId       String
  amount       Int
  type BoltCampaign
}

model UserMultiplier {
  id         Int      @id @default(autoincrement())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  multiplier Int
}

model CampaignEvent {
  id          Int          @id @default(autoincrement())
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  user        User         @relation(fields: [userId], references: [id])
  userId      String
  baseAmount  Int
  multiplier  Int
  totalAmount Int
  type        BoltCampaign
}

model MultiplierEvent {
  id         Int        @id @default(autoincrement())
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  user       User       @relation(fields: [userId], references: [id])
  userId     String
  multiplier Int
  type       Multiplier
  extraData  String?
}

// Add new campaigns to this list
enum BoltCampaign {
  COLLATERAL_DEPOSIT
  DEBT_BORRROW
  GALXE
  ZEALY
  ODG_ETH_LP
  OD_ETH_LP
}

enum Multiplier {
  TURTLE_CLUB
  GENESIS_NFT
  GENESIS_NFV
  OG_NFT
  CUSTOM
}
