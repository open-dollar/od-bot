// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model globalStats {
  id                    Int       @id @default(autoincrement())
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt
  network               Network
  blockTimestamp        String
  erc20Supply           String?
  globalDebt            String?
  globalDebtCeiling     String?
  globalDebtUtilization String?
  surplusInTreasury     String?
  marketPrice           String?
  redemptionRate        String?
  redemptionPrice       String?
  annualRate            String?
  eightRate             String?
  pRate                 String?
  iRate                 String?
  lastUpdateTime        DateTime?

  @@unique([network, blockTimestamp])
}

model tokenStats {
  id             Int      @id @default(autoincrement())
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  network        Network
  blockTimestamp String
  symbol         String?
  address        String?
  delayedOracle  String?
  debtAmount     String?
  debtCeiling    String?
  lockedAmount   String?
  currentPrice   String?
  nextPrice      String?
  stabilityFee   String?

  @@unique([network, blockTimestamp, symbol])
}

model tx {
  id              Int      @id @default(autoincrement())
  createdAt       DateTime @default(now())
  network         Network
  data            String
  method          String?
  contract        String?
  contractName    String?
  args            String?
  textTitle       String?
  textDescription String?
  hash            String?
}

model User {
  id          String   @id // address
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  galxePoints Int      @default(0)
  zealyPoints Int      @default(0)
}

enum Network {
  OPTIMISM
  OPTIMISM_GOERLI
  ARBITRUM
  ARBITRUM_GOERLI
  ARBITRUM_SEPOLIA
}
